                                
<--------------------    CRITERIA FOR ANALYSIS OF SORTING ALGORITHMS    -------------------->



1) *** Time Complexity ***
    O(nlogn) is faster than O(n^2).


2) *** Space Complexity ***
    # In Place Sorting -> In this type of we don't use any extra space for sorting purpose.
    Ex : Quick sort, bubble sort etc.
    # Out of Place Sorting -> In this type of sorting we need extra space for sorting purpose.
    Ex : Merge sort


3) *** Stability ***
    # Stable Sorting Algorithms -> Stable sorting algorithms preserve the relative order of equal elements i.e., maintains the position of two equals elements relative to one another.
    Ex :    A   B   C   D   E      ->      E   C   B   A   D
            9   4   0   9  -2      ->     -2   0   4   9   9
            [No matter how many times we sort with a stable sorting algo, A'll always be positioned before D even though both hold equal values.]

    # Unstable Sorting Algorithms -> Unstable sorting algorithms do not guarantee the preservation of the relative order of equal elements i.e., they may or may not maintain the position of two equals elements relative to one another.
    Ex :    A   B   C   D   E      ->      E   C   B   A   D    OR    E   C   B   D   A
            9   4   0   9  -2      ->     -2   0   4   9   9    OR   -2   0   4   9   9

    # Stability is important when sorting is being done on objects containing multiple fields in accordance with not all the fields.
    Ex: {{"Anil", 50}, {"Ashish", 70}, {"Pavan", 60}, {"Piyush", 50}}
        Stable Algo -> {{"Anil", 50}, {"Piyush", 50}, {"Pavan", 60}, {"Ashish", 70}}
        Unstable Algo -> {{"Piyush", 50}, {"Anil", 50}, {"Pavan", 60}, {"Ashish", 70}}
        
                      __
    #   Insertion       |
        Bubble          |--- Stable
        Merge         __|
        
                      __
    #   Selection       |
        Heap            |--- Unstable
        Quick         __|


4) *** Location of Input Data in Memory ***
    # Internal Sorting Algorithm -> All the input data to be sorted is stored in the main memory (RAM) at all times while sorting is in progress.
    # External Sorting Algorithm -> All the input data is stored outside the main memory (like on disk) and only loaded into RAM in small chunks. External sorting is usually applied in cases when data can't fit into memory entirely.


5) *** Adaptivity ***
    Already sorted data takes less time to process.


6) *** Recusive / Non-Recursive (Iterative) ***